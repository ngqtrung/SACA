@using SACA_Common.DTOs
@using SACA_Common.DTOs.Contest.Response
@using SACA_Common.DTOs.Report.ScoreBoard.Response
@using SACA_Common.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Reports";
    Layout = "_Layout";
    string? keyword = Context.Request.Query["keyword"];
    string? contestId = Context.Request.Query["contest_id"];
    string? classCode = Context.Request.Query["class_code"];
    string? subjectCode = Context.Request.Query["subject_code"];
    List<ContestTableView> contests = ViewBag.Contests;
    List<string> subjectCodes = ViewBag.SubjectCodes;
    List<string> classCodes = ViewBag.ClassCodes;
}
@model PagedResponse<ScoreBoardResponse>
@section BootstrapStyles {
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
}

<div class="p-4 container mx-auto">
    <!-- Filter Modal -->
    <div id="filterModal" class="inset-0 bg-gray-800 text-gray-600 fixed z-10 flex hidden items-center justify-center bg-opacity-50">
        <div class="bg-white w-96 p-4 rounded-lg shadow-lg">
            <h2 class="mb-4 text-lg font-bold">Filter Accounts</h2>
            <form id="filterForm" method="get" action="@Url.Action("Index", "Report")">
                <div class="mb-3">
                    <label for="keyword" class="text-gray-700 block text-sm font-medium">Search For</label>
                    <input type="text" value="@keyword" name="keyword" id="keyword" class="px-3 py-2 w-full rounded border">
                </div>
                <div class="mb-3">
                    <label for="classCode" class="text-gray-700 block text-sm font-medium">Class Code</label>
                    <select name="class_code" id="classCode" class="px-3 py-2 w-full rounded border">
                        <option value="">-- Select Class Code --</option>
                        @foreach (var code in classCodes)
                        {
                            <option selected="@(classCode==code)" value="@(code)">@code</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="subjectCode" class="text-gray-700 block text-sm font-medium">Subject Code</label>
                    <select name="subject_code" id="subjectCode" class="px-3 py-2 w-full rounded border">
                        <option value="">-- Select Subject Code --</option>
                        @foreach (var code in subjectCodes)
                        {
                            <option selected="@(subjectCode==code)" value="@(code)">@code</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="contest" class="text-gray-700 block text-sm font-medium">Status</label>
                    <select name="contest_id" id="contest" class="px-3 py-2 w-full rounded border">
                        <option value="">-- Select Contest --</option>
                        @foreach (var contest in contests)
                        {
                            <option selected="@(contestId==contest.id)" value="@(contest.id)">@contest.code</option>
                        }
                    </select>
                </div>
                <div class="space-x-2 flex justify-end">
                    <button type="button" class="bg-gray-200 text-gray-800 py-2 px-4 rounded" onclick="closeFilterModal()">Cancel</button>
                    <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded">Apply</button>
                </div>
            </form>
        </div>
    </div>
    <!-- Title -->
    <div class="mb-4 flex items-center justify-between">
        <h1 class="text-2xl font-bold">Score Board</h1>
        <div class="space-x-2 flex">
            <button id="filter-btn" class="bg-gray-200 text-gray-800 py-2 px-4 rounded">Filter</button>
            <button id="export-btn" class="bg-gray-200 text-gray-800 py-2 px-4 rounded">Export</button>
        </div>
    </div>

    <!-- Table -->
    <div class="p-7 bg-white w-full rounded-md">
        <table class="border-gray-300 text-black w-full border-collapse border text-left">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border-gray-300 px-4 py-2 border">#</th>
                    <th class="border-gray-300 px-4 py-2 border">RollNumber</th>
                    <th class="border-gray-300 px-4 py-2 border">FullName</th>
                    <th class="border-gray-300 px-4 py-2 border">Email</th>
                    <th class="border-gray-300 px-4 py-2 border">Score</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items!.Any())
                {
                    int index = (Model.page_index - 1) * Model.page_size + 1;
                    foreach (var participant in Model.Items!)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="border-gray-300 px-4 py-2 border">@(index++)</td>
                            <td class="border-gray-300 px-4 py-2 border">@participant.roll_number</td>
                            <td class="border-gray-300 px-4 py-2 border">@participant.fullname</td>
                            <td class="border-gray-300 px-4 py-2 border">@participant.email</td>
                            <td class="border-gray-300 px-4 py-2 border">@participant.score</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="border-gray-300 px-4 py-2 text-gray-500 border text-center">
                            No data.
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <div class="w-full">
            @Html.PagedListPager(
                     new StaticPagedList<ScoreBoardResponse>(Model.Items!, Model.page_index, Model.page_size, Model.total_items),
                     page => Url.Action("Index", new { page_index = page, page_size = Model.page_size, keyword, contestId, classCode, subjectCode }),
                     new PagedListRenderOptions
            {
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 5,
                ContainerDivClasses = new[] { "flex justify-end mt-4 text-black" },
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            }
                     )
        </div>
    </div>
</div>
