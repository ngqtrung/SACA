@{
    var modalSize = ViewData["Size"] as string ?? "md";
    var widthClass = modalSize switch
    {
        "sm" => "w-1/4",
        "md" => "w-1/2",
        "lg" => "w-3/4",
        "xl" => "w-full mx-4",
        _ => "w-1/3" // Default to medium
    };
    var isForm = ViewData["IsForm"] as bool? ?? false;
    var isMultipartForm = ViewData["IsMultipartForm"] as bool? ?? false;
    var method = ViewData["method"] as string ?? "POST"; 
}

@if (isForm)
{
    <form 
        // asp-controller="@ViewData["Controller"]" asp-action="@ViewData["Action"]" method="@method" 
        enctype="@(isMultipartForm == true ? "multipart/form-data" : "application/x-www-form-urlencoded")">
        <div id="@ViewData["ModalId"]" class="fixed inset-0 z-50 hidden bg-black bg-opacity-50 flex items-center justify-center overflow-hidden">
            <div class="flex flex-col gap-y-4 bg-white rounded-lg shadow-lg @widthClass max-h-[80vh] p-4 overflow-auto">
                <div class="flex justify-between items-center">
                    <h2 class="text-2xl text-black font-bold">@ViewData["Title"]</h2>
                    <button type="button" class="text-gray-600 hover:text-gray-800 p-2" onclick="closeModal('@ViewData["ModalId"]')">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" class="w-6 h-6">
                            <path strokeLinecap="round" strokeLinejoin="round" d="m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                        </svg>
                    </button>
                </div>
                <div class="text-gray-600">
                    @RenderBody()
                </div>
                <div class="flex justify-end gap-x-2 text-black">
                    <button type="reset" class="px-4 py-1 bg-gray-300 rounded" onclick="closeModal('@ViewData["ModalId"]')">Cancel</button>
                    @if (ViewData["ShowSubmitButton"] != null && (bool)ViewData["ShowSubmitButton"])
                    {
                        <button type="button" class="px-4 py-1 bg-[#D9F275] rounded" id="@ViewData["SubmitButtonId"]" onclick="@Html.Raw(ViewData["SubmitButtonHandler"])">
                            Save changes
                        </button>
                    }
                </div>
            </div>
        </div>
    </form>
}
else
{
    <div id="@ViewData["ModalId"]" class="fixed inset-0 z-50 hidden bg-black bg-opacity-50 flex items-center justify-center">
        <div class="flex flex-col gap-y-4 bg-white rounded-lg shadow-lg @widthClass max-h-[80vh] p-4 overflow-auto">
            <div class="flex justify-between items-center">
                <h2 class="text-black font-bold">@ViewData["Title"]</h2>
                <button class="text-gray-600 hover:text-gray-800 p-2" onclick="closeModal('@ViewData["ModalId"]')">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" class="w-6 h-6">
                        <path strokeLinecap="round" strokeLinejoin="round" d="m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                    </svg>
                </button>
            </div>
            <div class="text-gray-600">
                @RenderBody()
            </div>
            <div class="flex justify-end gap-x-2 text-black">
                <button class="px-4 py-1 bg-gray-300 rounded" onclick="closeModal('@ViewData["ModalId"]')">Cancel</button>
                @if (ViewData["ShowSubmitButton"] != null && (bool)ViewData["ShowSubmitButton"])
                {
                    <button class="px-4 py-1 bg-[#D9F275] rounded" id="@ViewData["SubmitButtonId"]"
                            onclick="@Html.Raw(ViewData["SubmitButtonHandler"])">
                        Save changes
                    </button>
                }
            </div>
        </div>
    </div>
}