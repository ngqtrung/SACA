@using SACA_Common.DTOs
@using SACA_Common.DTOs.Account.Request
@using SACA_Common.Enums
@using SACA_Common.DTOs.Account.Response
@using X.PagedList
@using X.PagedList.Mvc.Core
@model PagedResponse<SACA_Common.DTOs.Account.Response.AccountView>
﻿@{
    ViewData["Title"] = "Contest Detail";
    Layout = "_Layout";
    ViewBag.ShowNavTab = true;
    ViewBag.ActiveTab = "members";
    string? keyword = Context.Request.Query["keyword"];
    string contestId = ViewBag.ContestId;
}
@section BootstrapStyles {
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
}

<div>
    <div class="mb-4 flex items-center justify-end">
        <button id="filter-btn" class="bg-gray-200 text-gray-800 py-2 px-4 rounded">Filter</button>
    </div>
    <div class="p-7 bg-white w-full rounded-md">
        <!-- Filter Modal -->
        <div id="filterModal" class="inset-0 bg-gray-800 text-gray-600 fixed z-10 flex hidden items-center justify-center bg-opacity-50">
            <div class="bg-white w-96 p-4 rounded-lg shadow-lg">
                <h2 class="mb-4 text-lg font-bold">Filter Members</h2>
                <form id="filterForm" method="get" action="@Url.Action("Members", "Contests", new { id = contestId , request = new MemberTableFilter { contest_id = contestId,keyword = keyword}})">
                    <div class="mb-3">
                        <label for="keyword" class="text-gray-700 block text-sm font-medium">Search For</label>
                        <input type="text" value="@keyword" name="keyword" id="keyword" class="px-3 py-2 w-full rounded border">
                    </div>
                    <div class="space-x-2 flex justify-end">
                        <button type="button" class="bg-gray-200 text-gray-800 py-2 px-4 rounded" onclick="closeFilterModal()">Cancel</button>
                        <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded">Apply</button>
                    </div>
                </form>
            </div>
        </div>
        <table class="border-gray-300 text-black w-full border-collapse border text-left">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border-gray-300 px-4 py-2 border">#</th>
                    <th class="border-gray-300 px-4 py-2 border">Username</th>
                    <th class="border-gray-300 px-4 py-2 border">Full Name</th>
                    <th class="border-gray-300 px-4 py-2 border">Email</th>
                    <th class="border-gray-300 px-4 py-2 border">Last Login</th>
                    <th class="border-gray-300 px-4 py-2 border">Status</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items?.Any() == true)
                {
                    int index = 1;
                    @foreach (var member in Model.Items)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="border-gray-300 px-4 py-2 border">@(index++)</td>
                            <td class="border-gray-300 px-4 py-2 border">@member.username</td>
                            <td class="border-gray-300 px-4 py-2 border">@member.fullname</td>
                            <td class="border-gray-300 px-4 py-2 border">@member.email</td>
                            <td class="border-gray-300 px-4 py-2 border">@member.last_login</td>
                            <td class="border-gray-300 px-4 py-2 border">
                                <div class="gap-x-2 flex items-center">
                                    @if (member.status == 0)
                                    {
                                        <svg width="6" height="6" viewBox="0 0 6 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect width="6.0025" height="6.0015" rx="3.00075" fill="#E5E7EB" />
                                        </svg>
                                        <span class="text-gray-500">Inactive</span>
                                    }
                                    else
                                    {
                                        <svg width="6" height="6" viewBox="0 0 6 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect width="6.0025" height="6.0015" rx="3.00075" fill="#A0D911" />
                                        </svg>
                                        <span class="text-green-600">Active</span>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="border-gray-300 px-4 py-2 text-gray-500 border text-center">
                            No members available.
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->

        <div class="w-full">
            @Html.PagedListPager(
                     new StaticPagedList<AccountView>(Model.Items, Model.page_index, Model.page_size, Model.total_items),
                     page => Url.Action("Members", new { page_index = page, page_size = Model.page_size }),
                     new PagedListRenderOptions
            {
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 5,
                ContainerDivClasses = new[] { "flex justify-end mt-4 text-black" },
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            }
                     )
        </div>
    </div>
</div>
